<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
=======

# Created by https://www.toptal.com/developers/gitignore/api/django,virtualenv,python
# Edit at https://www.toptal.com/developers/gitignore?templates=django,virtualenv,python

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
<<<<<<< HEAD
env/
=======
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
*.egg-info/
.installed.cfg
*.egg
=======
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
<<<<<<< HEAD
=======
.nox/
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
<<<<<<< HEAD
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
=======
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo

# Django stuff:
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
<<<<<<< HEAD
=======
doc/_build/
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

<<<<<<< HEAD
# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule
=======
# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272

# SageMath parsed files
*.sage.py

<<<<<<< HEAD
# dotenv
.env

# virtualenv
.venv
venv/
ENV/
.vscode
=======
# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272
# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
<<<<<<< HEAD

.DS_Store
*.sqlite3
media/
*.pyc
*.db
*.pid

# Ignore Django Migrations in Development if you are working on team

# Only for Development only
# **/migrations/**
# !**/migrations
# !**/migrations/__init__.py
=======
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

### Python ###
# Byte-compiled / optimized / DLL files

# C extensions

# Distribution / packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.

# Installer logs

# Unit test / coverage reports

# Translations

# Django stuff:

# Flask stuff:

# Scrapy stuff:

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# PEP 582; used by e.g. github.com/David-OConnor/pyflow

# Celery stuff

# SageMath parsed files

# Environments

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

### VirtualEnv ###
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
pip-selfcheck.json

# End of https://www.toptal.com/developers/gitignore/api/django,virtualenv,python
.vscode 
.vscode/

.DS_Store
__pycache__
*.sqlite3 
env 
>>>>>>> 63dfec1c90a404cd300b124d3500d8f3bf9fa272
